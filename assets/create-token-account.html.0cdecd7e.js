import{_ as n,e as s}from"./app.50ff3e54.js";const a={},t=s(`<h1 id="create-token-account" tabindex="-1"><a class="header-anchor" href="#create-token-account" aria-hidden="true">#</a> Create Token Account</h1><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Keypair<span class="token punctuation">,</span> Transaction<span class="token punctuation">,</span> SystemProgram <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@solana/web3.js&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">ALICE</span><span class="token punctuation">,</span> <span class="token constant">CONNECTION</span><span class="token punctuation">,</span> <span class="token constant">FEE_PAYER</span><span class="token punctuation">,</span> <span class="token constant">TEST_MINT</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../../../helper/const&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> SPLToken <span class="token keyword">from</span> <span class="token string">&quot;@solana/spl-token&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \u5275\u5EFAToken Account</span>

<span class="token comment">// wrapped sol \u672C\u8CEA\u4E0A\u4E5F\u662F\u4E00\u7A2E mint\uFF0C\u6240\u4EE5\u6211\u5011\u6703\u9700\u8981\u4E00\u500Btoken account\u4F86\u6301\u6709\u4ED6 (\u4E0D\u719F\u6089\u7684\u670B\u53CB\u53EF\u4EE5\u5230tour/create-token-account\u8907\u7FD2\u4E0B)</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> ata <span class="token operator">=</span> <span class="token keyword">await</span> SPLToken<span class="token punctuation">.</span>Token<span class="token punctuation">.</span><span class="token function">getAssociatedTokenAddress</span><span class="token punctuation">(</span>
    SPLToken<span class="token punctuation">.</span><span class="token constant">ASSOCIATED_TOKEN_PROGRAM_ID</span><span class="token punctuation">,</span> <span class="token comment">// \u901A\u5E38\u662F\u56FA\u5B9A\u503C, associated token program id</span>
    SPLToken<span class="token punctuation">.</span><span class="token constant">TOKEN_PROGRAM_ID</span><span class="token punctuation">,</span> <span class="token comment">// \u901A\u5E38\u662F\u56FA\u5B9A\u503C, token program id</span>
    SPLToken<span class="token punctuation">.</span><span class="token constant">NATIVE_MINT</span><span class="token punctuation">,</span> <span class="token comment">// mint</span>
    <span class="token constant">ALICE</span><span class="token punctuation">.</span>publicKey <span class="token comment">// token account auth (\u64C1\u6709token account\u6B0A\u9650\u7684\u4EBA)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ata: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ata<span class="token punctuation">.</span><span class="token function">toBase58</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> ataTx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ataTx<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
    SPLToken<span class="token punctuation">.</span>Token<span class="token punctuation">.</span><span class="token function">createAssociatedTokenAccountInstruction</span><span class="token punctuation">(</span>
      SPLToken<span class="token punctuation">.</span><span class="token constant">ASSOCIATED_TOKEN_PROGRAM_ID</span><span class="token punctuation">,</span> <span class="token comment">// \u901A\u5E38\u662F\u56FA\u5B9A\u503C, associated token program id</span>
      SPLToken<span class="token punctuation">.</span><span class="token constant">TOKEN_PROGRAM_ID</span><span class="token punctuation">,</span> <span class="token comment">// \u901A\u5E38\u662F\u56FA\u5B9A\u503C, token program id</span>
      SPLToken<span class="token punctuation">.</span><span class="token constant">NATIVE_MINT</span><span class="token punctuation">,</span> <span class="token comment">// mint (\u9700\u8981\u8DDF\u525B\u525B\u7B97ata\u6642\u7684mint\u662F\u540C\u4E00\u500B)</span>
      ata<span class="token punctuation">,</span> <span class="token comment">// \u525B\u525B\u7B97\u51FA\u4F86\u7684 ata</span>
      <span class="token constant">ALICE</span><span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> <span class="token comment">// token account owner (\u8981\u8DDF\u525B\u525B\u7B97ata\u6642\u7684token account auth\u662F\u540C\u4E00\u500B)</span>
      <span class="token constant">FEE_PAYER</span><span class="token punctuation">.</span>publicKey <span class="token comment">// payer, \u5EFA\u7ACB\u5E33\u6236\u4ED8\u9322\u7684\u4EBA\uFF0C\u7B49\u540C\u65BC SystemProgram.createAccount \u7684 from</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  ataTx<span class="token punctuation">.</span>feePayer <span class="token operator">=</span> <span class="token constant">FEE_PAYER</span><span class="token punctuation">.</span>publicKey<span class="token punctuation">;</span>

  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ata txhash: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">await</span> <span class="token constant">CONNECTION</span><span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span>ataTx<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token constant">FEE_PAYER</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div>`,2);function p(o,c){return t}var u=n(a,[["render",p],["__file","create-token-account.html.vue"]]);export{u as default};
